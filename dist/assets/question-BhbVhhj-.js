import{y as z,m as f,p}from"./vue-BygjnGSS.js";const j=z("question",()=>{const i=f([]),v=f([]),u=f({}),r=f(""),n=f(""),c=f(0),m=f(!1),g=p(()=>i.value.find(e=>e.id===r.value)),a=p(()=>g.value?g.value.questionSets.find(e=>e.id===n.value):null),$=p(()=>a.value&&a.value.questions[c.value]||null),x=p(()=>{var e;return!r.value||!n.value?null:((e=u.value[r.value])==null?void 0:e.questionSetProgress[n.value])||null});function I(e){i.value=e;const s=localStorage.getItem("userAnswers"),o=localStorage.getItem("chapterProgress");s&&(v.value=JSON.parse(s)),o?u.value=JSON.parse(o):N()}function N(){const e={};i.value.forEach(s=>{const o={};s.questionSets.forEach(t=>{o[t.id]={questionSetId:t.id,totalQuestions:t.questions.length,correctAnswers:0,completedQuestions:0},console.log(`初始化题集进度: ${t.id}`,o[t.id])}),e[s.id]={chapterId:s.id,questionSetProgress:o,totalCorrectRate:0}}),u.value=e,console.log("初始化所有章节进度完成:",u.value),S()}function S(){localStorage.setItem("userAnswers",JSON.stringify(v.value)),localStorage.setItem("chapterProgress",JSON.stringify(u.value))}function R(e,s,o){const t={questionId:e,selectedOptionId:s,isCorrect:o,timestamp:Date.now()};if(v.value.push(t),r.value&&n.value){if(!u.value[r.value])if(console.error("章节进度不存在:",r.value),g.value)u.value[r.value]={chapterId:r.value,questionSetProgress:{},totalCorrectRate:0},console.log(`重新初始化章节进度: ${r.value}`);else return o;const q=u.value[r.value];let d=q.questionSetProgress[n.value];if(!d)if(console.error("题集进度不存在:",n.value),a.value)q.questionSetProgress[n.value]={questionSetId:n.value,totalQuestions:a.value.questions.length,correctAnswers:0,completedQuestions:0},console.log(`重新初始化题集进度: ${n.value}`,q.questionSetProgress[n.value]),d=q.questionSetProgress[n.value];else return o;d.completedQuestions+=1,o&&(d.correctAnswers+=1),d.lastAttemptDate=Date.now(),h(r.value),S()}return o}function h(e){const s=u.value[e];if(!s){console.error("章节进度不存在:",e);return}let o=0,t=0;Object.values(s.questionSetProgress).forEach(l=>{o+=l.correctAnswers,t+=l.completedQuestions}),s.totalCorrectRate=t>0?o/t:0}function P(e){r.value=e,n.value="",c.value=0}function Q(e){n.value=e,c.value=0}function D(){return a.value&&c.value<a.value.questions.length-1?(c.value+=1,!0):!1}function O(){return a.value&&c.value>0?(c.value-=1,!0):!1}function C(){if(console.log("开始获取下一个题集，当前章节:",r.value,"当前题集:",n.value),!g.value)return console.error("当前章节不存在"),null;const e=g.value.questionSets;console.log("当前章节包含题集数量:",e.length,"题集列表:",e.map(t=>t.id));const s=e.findIndex(t=>t.id===n.value);if(console.log("当前题集索引:",s,"(从0开始计数)"),s!==-1&&s<e.length-1){const t=e[s+1].id;return console.log("找到同一章节中的下一个题集:",t),{chapterId:r.value,questionSetId:t}}const o=i.value.findIndex(t=>t.id===r.value);if(console.log("当前章节索引:",o,"总章节数:",i.value.length),o!==-1&&o<i.value.length-1){const t=i.value[o+1];if(console.log("找到下一个章节:",t.id,"包含题集数量:",t.questionSets.length),t.questionSets.length>0){const l=t.questionSets[0].id;return console.log("找到下一个章节的第一个题集:",l),{chapterId:t.id,questionSetId:l}}else console.log("下一个章节没有题集")}else console.log("已经是最后一个章节或章节不存在");return console.log("没有找到下一个题集，返回null"),null}function w(){if(!g.value||!a.value)return!1;const e=a.value.questions.map(o=>o.id),s=new Map;if(v.value.forEach(o=>{if(e.includes(o.questionId)){const t=s.get(o.questionId);(!t||o.timestamp>t.timestamp)&&s.set(o.questionId,o)}}),s.size!==e.length)return!1;for(const o of s.values())if(!o.isCorrect)return!1;return!0}function y(){if(!w())return A(),{success:!0,reset:!0};const e=C();return e?(E(e.chapterId,e.questionSetId),P(e.chapterId),Q(e.questionSetId),{success:!0,reset:!1}):{success:!0,reset:!0}}function E(e,s){if(console.log(`尝试确保进度初始化: 章节=${e}, 题集=${s}`),u.value[e]||(console.log(`初始化缺失的章节进度: ${e}`),u.value[e]={chapterId:e,questionSetProgress:{},totalCorrectRate:0}),u.value[e].questionSetProgress[s])console.log(`题集进度已存在: ${s}`,u.value[e].questionSetProgress[s]);else{console.log(`题集进度不存在: ${s}，尝试初始化`);const o=i.value.find(t=>t.id===e);if(o){console.log(`找到章节: ${e}，包含 ${o.questionSets.length} 个题集`);const t=o.questionSets.find(l=>l.id===s);t?(console.log(`找到题集: ${s}，包含 ${t.questions.length} 个问题`),u.value[e].questionSetProgress[s]={questionSetId:s,totalQuestions:t.questions.length,correctAnswers:0,completedQuestions:0},console.log(`成功初始化题集进度: ${s}`,u.value[e].questionSetProgress[s])):console.error(`未找到题集: ${s}，可用题集:`,o.questionSets.map(l=>l.id))}else console.error(`未找到章节: ${e}，可用章节:`,i.value.map(t=>t.id))}S()}function A(){var t;if(!r.value||!n.value)return;const e=u.value[r.value];if(!e){console.error("章节进度不存在:",r.value);return}const s=e.questionSetProgress[n.value];if(!s)if(console.error("题集进度不存在:",n.value),a.value)e.questionSetProgress[n.value]={questionSetId:n.value,totalQuestions:a.value.questions.length,correctAnswers:0,completedQuestions:0},console.log(`重新初始化题集进度: ${n.value}`,e.questionSetProgress[n.value]);else return;const o=((t=a.value)==null?void 0:t.questions.map(l=>l.id))||[];v.value=v.value.filter(l=>!o.includes(l.questionId)),s.completedQuestions=0,s.correctAnswers=0,h(r.value),S(),c.value=0,console.log("重置题集进度完成，当前问题索引重置为0")}function J(){m.value=!m.value}function T(e){const s=v.value.filter(t=>t.questionId===e);return s.length===0?0:s.filter(t=>t.isCorrect).length/s.length*100}return{chapters:i,userAnswers:v,chapterProgress:u,currentChapterId:r,currentQuestionSetId:n,currentQuestionIndex:c,showChinese:m,currentChapter:g,currentQuestionSet:a,currentQuestion:$,currentSetProgress:x,initQuestionData:I,recordAnswer:R,setCurrentChapter:P,setCurrentQuestionSet:Q,moveToNextQuestion:D,moveToPreviousQuestion:O,moveToNextQuestionSet:y,getNextQuestionSet:C,getQuestionCorrectRate:T,resetCurrentSetProgress:A,toggleChineseDisplay:J,isCurrentSetAllCorrect:w}});export{j as u};
